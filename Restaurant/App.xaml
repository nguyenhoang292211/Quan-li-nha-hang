<Application x:Class="Restaurant.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Restaurant"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!--Material color-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.teal.xaml" />

                <!--Material theme cơ bản-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

                <!--Các Style cần dùng-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.togglebutton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
                <!-- Resource Main-->
            </ResourceDictionary.MergedDictionaries>
        
       


        <SolidColorBrush x:Key="DynamicBG"/>  
        <Storyboard x:Key="sbShowLeftMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-150,0,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1"></ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="sbHideLeftMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="-150,0,0,0" DecelerationRatio=".9" Duration="0:0:1"></ThicknessAnimation>
        </Storyboard>


        <Style x:Key="myStyle" TargetType="{x:Type StackPanel}">
         
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="Black"></Setter>
                    <Setter Property="ToolTip" Value="Kapan"></Setter>
                    <Setter Property="Tag" Value="Kapan"></Setter>
                   
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGreen"></Setter>
                    <Setter Property="ToolTip" Value="Açıl"></Setter>
                    <Setter Property="Tag" Value="Açıl"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
   
       
        <!--<Style x:Key="myButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderThickness="5,1,1,1" 
                                BorderBrush="White" Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#FF42B60C"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="5,1,1,1"/>
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Content" Value="Açıl"/>
                                <Setter Property="Tag" Value="Açıl"/>
                                <Setter Property="ToolTip" Value="Açıl"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="ff32760b"/>
                                <Setter TargetName="border" Property="Background" Value="#fffdfdfd"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="5,1,1,1"/>
                                <Setter Property="Foreground" Value="ff32760b" />
                                <Setter Property="Content" Value="Kapan"/>
                                <Setter Property="Tag" Value="Kapan"/>
                                <Setter Property="ToolTip" Value="Kapan"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="dockmenu" TargetType="DockPanel">
            <Setter Property="VerticalAlignment" Value="center"></Setter>
            <Setter Property="Width" Value="220"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="Height" Value="71"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Tomato"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="spSlideLeft" TargetType="StackPanel">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                </Trigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-150,0,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:0.8"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="0,0,0,0" To="-150,0,0,0" DecelerationRatio=".9" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuLabel" TargetType="Label">
            <Setter Property="FontSize" Value="19"></Setter>
            <Setter Property="Padding" Value="15,0,0,0"/>
            <Setter Property="Foreground" Value="#E4EFFF"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Poppins"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    
                </Trigger>
                <!--<Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Foreground" Value="#FFACB5B9"/>
                </Trigger>-->
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuDecLabel" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,0,0,0"/>
            <Setter Property="Foreground" Value="#FFACB5B9"/>
            <Setter Property="FontFamily" Value="Montserrat "></Setter>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
        </Style>

            <!--<Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Margin" Value="2,0,0,8" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Track IsDirectionReversed="true" Focusable="True">
                                <Track.Thumb>
                                    <Thumb Width="5" Background="CornflowerBlue" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
